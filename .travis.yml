sudo: false
env:
  global:
    - CODECOV_TOKEN="3ec55087-b2f5-4407-9396-9fbcfa5d98cd"
addons:
  apt:
    packages:
      - gperf
      - python
      - python-serial
matrix:
  include:    
    - language: cpp
      os: linux
      script:
        - cd Testing
        - g++ --std=c++11 unitTests.cpp
        - ./a.out
        - cd ../
    #
    # Next Section is modeled off of example found at
    # https://github.com/igrr/esp32-cam-demo/blob/master/.travis.yml
    # modifications have been made to fit the nature of the 2019 SJSU Robotics Project
    #
    - language: bash
      os: linux
      before_install:
        # Save path to the git respository
        - PROJECT_PATH=$(pwd)
        # Remove original esp-idf and toolchain
        - rm -rf esp-idf
        - rm -rf xtensa-esp32-elf
      install:
        # Install ESP32 toochain following steps as desribed
        # in http://esp-idf.readthedocs.io/en/latest/linux-setup.html
        #
        # Get required packages - already done above, see addons: apt: packages:
        # - sudo apt-get install git wget make libncurses-dev flex bison gperf python python-serial
        # Prepare directory for the toolchain
        - mkdir -p ~/esp
        - cd ~/esp
         # Download binary toolchain for the ESP32
        - wget https://dl.espressif.com/dl/xtensa-esp32-elf-linux64-1.22.0-61-gab8375a-5.2.0.tar.gz
        - tar -xzf xtensa-esp32-elf-linux64-1.22.0-61-gab8375a-5.2.0.tar.gz
        # Make xtensa-esp32-elf available for all terminal sessions
        - export PATH=$PATH:$HOME/esp/xtensa-esp32-elf/bin
        # Get ESP-IDF from github
        - git clone --recursive https://github.com/espressif/esp-idf.git
        # Set the path to ESP-IDF directory
        - export IDF_PATH=~/esp/esp-idf
        # Update ESP-IDF
        - /usr/bin/python -m pip install --user -r /home/travis/esp/esp-idf/requirements.txt
      script:
        # Go back to the git repository
        - cd $PROJECT_PATH/Projects/hello_world
        # Update configuration so that kconfig doesn't start interactive mode
        - make defconfig
        # Build project from the git repository
        - make app PROJECT_NAME=hello-world
        # Create codecov report
        - cd ../../
after_success:
  - bash <(curl -s https://codecov.io/bash) -x $(which gcove-7)
